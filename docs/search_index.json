[
["index.html", "Preface What is this Git/GitHub Tutorial about? Why is git important for scientists? Acknowledgment Other helpful links", " Git/GitHub Tutorial for Scientists: its not only for programmers Micaela Chan Preface What is this Git/GitHub Tutorial about? The goal of this tutorial is to help scientists with no formal programming background to (1) start using git locally for version-control of your code, and (2) begin using GitHub to share your code and collaborate with others. *You do not need to be a programmer Why is git important for scientists? Git faciliates (1) documentation, and (2) faciliates sharing/collaborating. Both of these are important parts in the scientific process. I. Version-control of scripts is the lab notebook of experiments, but for codes In scientific experiments, we are trained to record every parameter that we modified and tested, as it is crucial for both consistency within the experiment and facilitating reproducible results. While we often record the experimental part of our experiments meticulously, the preprocessing and analyzing of data are often ‘assumed’ to be recorded in our scripts. Here are a few scenarios where we wish a detailed history of how codes were developed is available: Scenario A: Things were working, now they are not! You have 5 people collaborating on a single script. That script now results in an error after someone changed a few lines over the weekend. They have no recollection what was changed. ¯\\_(ツ)_/¯ Scenario B: Why were changes made? You joined a new lab, and were given a pipeline/script to modify that dated years back. The script is named cool_script_version25000.sh, with few comments. Whoever made it has quit academia and is traveling the world, soul searching, and won’t answer emails. ¯\\_(ツ)_/¯ Scenario C: We made changes a long time ago… Collaborator BigName wants to know what preprocessing parameters were used in your manuscript from 5 years ago. You have since changed multiple parameters in your default processing pipeline. ¯\\_(ツ)_/¯ Saving something as Final.doc is bad…but Final_script.R is just as bad II. Git and Remote Hosts (e.g., GitHub) makes sharing/collaborating easier Share codes The traditional method of sharing scientific results, manuscripts, is a difficult form to share scripts. For example, while you can share the general processes of how things are done, but the actual 1000+ lines scripts are usually not printed. Remote Hosts such as GitHub (or other alternatives) makes sharing your codes very easy. It’s a link. People can choose to follow your code, and if you update it, they get a notification. Facilitates new collaboration If you found a way to speed up some toolbox, Git/GitHub helps you to suggest this change to the author of the toolbox, even if you don’t know each other. Encourages open source Acknowledgment The content in this workshop is heavily borrowed from https://www.atlassian.com/git/tutorials/git-bash. Other helpful links Git the Simple Guide All the necessary commands to use git is in here. "]
]
